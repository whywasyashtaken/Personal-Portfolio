{"ast":null,"code":"import _slicedToArray from \"/Users/yash/Desktop/Profile/resume/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { frame } from '../frameloop/index.mjs';\nimport { useRef, useEffect } from 'react';\nimport { useInstantLayoutTransition } from '../projection/use-instant-layout-transition.mjs';\nimport { useForceUpdate } from './use-force-update.mjs';\nimport { instantAnimationState } from './use-instant-transition-state.mjs';\nfunction useInstantTransition() {\n  var _useForceUpdate = useForceUpdate(),\n    _useForceUpdate2 = _slicedToArray(_useForceUpdate, 2),\n    forceUpdate = _useForceUpdate2[0],\n    forcedRenderCount = _useForceUpdate2[1];\n  var startInstantLayoutTransition = useInstantLayoutTransition();\n  var unlockOnFrameRef = useRef();\n  useEffect(function () {\n    /**\n     * Unblock after two animation frames, otherwise this will unblock too soon.\n     */\n    frame.postRender(function () {\n      return frame.postRender(function () {\n        /**\n         * If the callback has been called again after the effect\n         * triggered this 2 frame delay, don't unblock animations. This\n         * prevents the previous effect from unblocking the current\n         * instant transition too soon. This becomes more likely when\n         * used in conjunction with React.startTransition().\n         */\n        if (forcedRenderCount !== unlockOnFrameRef.current) return;\n        instantAnimationState.current = false;\n      });\n    });\n  }, [forcedRenderCount]);\n  return function (callback) {\n    startInstantLayoutTransition(function () {\n      instantAnimationState.current = true;\n      forceUpdate();\n      callback();\n      unlockOnFrameRef.current = forcedRenderCount + 1;\n    });\n  };\n}\nexport { useInstantTransition };","map":{"version":3,"names":["frame","useRef","useEffect","useInstantLayoutTransition","useForceUpdate","instantAnimationState","useInstantTransition","_useForceUpdate","_useForceUpdate2","_slicedToArray","forceUpdate","forcedRenderCount","startInstantLayoutTransition","unlockOnFrameRef","postRender","current","callback"],"sources":["/Users/yash/Desktop/Profile/resume/node_modules/framer-motion/dist/es/utils/use-instant-transition.mjs"],"sourcesContent":["import { frame } from '../frameloop/index.mjs';\nimport { useRef, useEffect } from 'react';\nimport { useInstantLayoutTransition } from '../projection/use-instant-layout-transition.mjs';\nimport { useForceUpdate } from './use-force-update.mjs';\nimport { instantAnimationState } from './use-instant-transition-state.mjs';\n\nfunction useInstantTransition() {\n    const [forceUpdate, forcedRenderCount] = useForceUpdate();\n    const startInstantLayoutTransition = useInstantLayoutTransition();\n    const unlockOnFrameRef = useRef();\n    useEffect(() => {\n        /**\n         * Unblock after two animation frames, otherwise this will unblock too soon.\n         */\n        frame.postRender(() => frame.postRender(() => {\n            /**\n             * If the callback has been called again after the effect\n             * triggered this 2 frame delay, don't unblock animations. This\n             * prevents the previous effect from unblocking the current\n             * instant transition too soon. This becomes more likely when\n             * used in conjunction with React.startTransition().\n             */\n            if (forcedRenderCount !== unlockOnFrameRef.current)\n                return;\n            instantAnimationState.current = false;\n        }));\n    }, [forcedRenderCount]);\n    return (callback) => {\n        startInstantLayoutTransition(() => {\n            instantAnimationState.current = true;\n            forceUpdate();\n            callback();\n            unlockOnFrameRef.current = forcedRenderCount + 1;\n        });\n    };\n}\n\nexport { useInstantTransition };\n"],"mappings":";AAAA,SAASA,KAAK,QAAQ,wBAAwB;AAC9C,SAASC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACzC,SAASC,0BAA0B,QAAQ,iDAAiD;AAC5F,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,qBAAqB,QAAQ,oCAAoC;AAE1E,SAASC,oBAAoBA,CAAA,EAAG;EAC5B,IAAAC,eAAA,GAAyCH,cAAc,CAAC,CAAC;IAAAI,gBAAA,GAAAC,cAAA,CAAAF,eAAA;IAAlDG,WAAW,GAAAF,gBAAA;IAAEG,iBAAiB,GAAAH,gBAAA;EACrC,IAAMI,4BAA4B,GAAGT,0BAA0B,CAAC,CAAC;EACjE,IAAMU,gBAAgB,GAAGZ,MAAM,CAAC,CAAC;EACjCC,SAAS,CAAC,YAAM;IACZ;AACR;AACA;IACQF,KAAK,CAACc,UAAU,CAAC;MAAA,OAAMd,KAAK,CAACc,UAAU,CAAC,YAAM;QAC1C;AACZ;AACA;AACA;AACA;AACA;AACA;QACY,IAAIH,iBAAiB,KAAKE,gBAAgB,CAACE,OAAO,EAC9C;QACJV,qBAAqB,CAACU,OAAO,GAAG,KAAK;MACzC,CAAC,CAAC;IAAA,EAAC;EACP,CAAC,EAAE,CAACJ,iBAAiB,CAAC,CAAC;EACvB,OAAO,UAACK,QAAQ,EAAK;IACjBJ,4BAA4B,CAAC,YAAM;MAC/BP,qBAAqB,CAACU,OAAO,GAAG,IAAI;MACpCL,WAAW,CAAC,CAAC;MACbM,QAAQ,CAAC,CAAC;MACVH,gBAAgB,CAACE,OAAO,GAAGJ,iBAAiB,GAAG,CAAC;IACpD,CAAC,CAAC;EACN,CAAC;AACL;AAEA,SAASL,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}